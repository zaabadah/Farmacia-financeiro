BEAN USUARIOS

import java.io.Serializable;
import java.util.List;

import javax.annotation.PostConstruct;
import javax.faces.bean.ManagedBean;
import javax.faces.bean.ViewScoped;

import org.omnifaces.util.Messages;

import br.com.financeiro.dao.PessoaDAO;
import br.com.financeiro.dao.UsuarioDAO;
import br.com.financeiro.domain.Pessoa;
import br.com.financeiro.domain.Usuario;

@SuppressWarnings("serial")
@ManagedBean
@ViewScoped
public class UsuarioBean implements Serializable {
	private Usuario usuario;
	
	private List<Pessoa> pessoas;
	private List<Usuario> usuarios;
	
	public Usuario getUsuario() {
		return usuario;
	}
	
	public void setUsuario(Usuario usuario) {
		this.usuario = usuario;
	}
	
	public List<Pessoa> getPessoas() {
		return pessoas;
	}
	
	public void setPessoas(List<Pessoa> pessoas) {
		this.pessoas = pessoas;
	}
	
	public List<Usuario> getUsuarios() {
		return usuarios;
	}
	
	public void setUsuarios(List<Usuario> usuarios) {
		this.usuarios = usuarios;
	}
	
	@PostConstruct
	public void listar(){
		try{
			UsuarioDAO usuarioDAO = new UsuarioDAO();
			usuarios = usuarioDAO.listar("tipo");
		}catch(RuntimeException erro){
			Messages.addGlobalError("Ocorreu um erro ao tentar listar os usuários");
			erro.printStackTrace();
		}
	}
	
	public void novo() {
		try {
			usuario = new Usuario();

			PessoaDAO pessoaDAO = new PessoaDAO();
			pessoas = pessoaDAO.listar("nome");
		} catch (RuntimeException erro) {
			Messages.addGlobalError("Ocorreu um erro ao tentar criar um novo usuário");
			erro.printStackTrace();
		}
	}

	public void salvar() {
		try {
			UsuarioDAO usuarioDAO = new UsuarioDAO();
			usuarioDAO.merge(usuario);
			
			usuario = new Usuario();
			usuarios = usuarioDAO.listar("tipo");
			
			PessoaDAO pessoaDAO = new PessoaDAO();
			pessoas = pessoaDAO.listar("nome");
			
			Messages.addGlobalInfo("Usuário salvo com sucesso");
		} catch (RuntimeException erro) {
			Messages.addGlobalError("Ocorreu um erro ao tentar salvar o usuário");
			erro.printStackTrace();
		}
	}
}











XHTML USUARIOS



<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"
	xmlns:h="http://xmlns.jcp.org/jsf/html"
	xmlns:f="http://xmlns.jcp.org/jsf/core"
	xmlns:p="http://primefaces.org/ui">
<h:head>
	<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
	<title>Cidades</title>
	
	<h:outputStylesheet library="css" name="estilo.css" />
	<h:outputScript library="js" name="scripts.js"/>
</h:head>



<h:body>
	<p:growl id="mensagem" />

	<h:form id="formListagem">
		<p:panel header="Lista de Usuários">

<p:dataTable id="tabela" emptyMessage="Nenhum registro encontrado."
				paginator="true" value="#{usuarioBean.usuarios}" var="usuario"
				rows="5">
				<f:facet name="header">
					<p:commandButton value="Novo" oncomplete="PF('dialogo').show();"
						actionListener="#{usuarioBean.novo}"
						update=":mensagem :formCadastro:painel">
						<f:actionListener
							type="org.omnifaces.eventlistener.ResetInputAjaxActionListener" />
					</p:commandButton>
				</f:facet>

				<p:column headerText="Nome" sortBy="#{usuario.pessoa.nome}"
					filterBy="#{usuario.pessoa.nome}">
					<h:outputText value="#{usuario.pessoa.nome}" />
				</p:column>

				<p:column headerText="CPF" sortBy="#{usuario.pessoa.cpf}"
					filterBy="#{usuario.pessoa.cpf}">
					<h:outputText value="#{usuario.pessoa.cpf}" />
				</p:column>

				<p:column headerText="Tipo" sortBy="#{usuario.tipo}">
					<h:outputText value="#{usuario.tipo}" />
				</p:column>

				<p:column headerText="Ativo" sortBy="#{usuario.ativoFormatado}">
					<h:outputText value="#{usuario.ativoFormatado}" />
				</p:column>

				<p:column headerText="Opções">
				</p:column>
			</p:dataTable>
		</p:panel>
	</h:form>

	<p:dialog header="Usuários - Cadastro" widgetVar="dialogo"
		draggable="false" resizable="false" modal="true" closable="false">
		<h:form id="formCadastro">
			<h:panelGrid id="painel" columns="2">
				<p:outputLabel for="pessoa" value="Pessoa:" />
				<p:selectOneMenu id="pessoa" filter="true"
					value="#{usuarioBean.usuario.pessoa}" required="true"
					requiredMessage="O campo 'Pessoa' é obrigatório"
					converter="omnifaces.SelectItemsConverter">
					<f:selectItem noSelectionOption="true"
						itemLabel="Selecione uma pessoa" />
					<f:selectItems value="#{usuarioBean.pessoas}" var="pessoa"
						itemValue="#{pessoa}" itemLabel="#{pessoa.nome} - #{pessoa.cpf}" />
				</p:selectOneMenu>

				<p:outputLabel for="senha" value="Senha:" />
				<p:password id="senha" maxlength="8" size="10"
					value="#{usuarioBean.usuario.senha}" required="true"
					requiredMessage="O campo 'Senha' é obrigatório"
					validatorMessage="Informe uma senha de 6 a 8 caracteres">
					<f:validateLength minimum="6" maximum="8" />
				</p:password>

				<p:outputLabel for="tipo" value="Tipo:" />
				<p:selectOneRadio id="tipo" value="#{usuarioBean.usuario.tipo}"
					required="true" requiredMessage="O campo 'Tipo' ´obrigatório">
					<f:selectItem itemValue="A" itemLabel="Administrador" />
					<f:selectItem itemValue="G" itemLabel="Gerente" />
					<f:selectItem itemValue="B" itemLabel="Balconista" />
				</p:selectOneRadio>

				<p:outputLabel for="ativo" value="Ativo:" />
				<p:selectBooleanCheckbox id="ativo"
					value="#{usuarioBean.usuario.ativo}" required="true"
					requiredMessage="O campo 'Ativo' é obrigatório" />
			</h:panelGrid>

			<h:panelGrid columns="2">
				<p:commandButton value="Salvar"
					update=":mensagem :formCadastro:painel :formListagem:tabela"
					actionListener="#{usuarioBean.salvar}" />
				<p:commandButton value="Fechar" oncomplete="PF('dialogo').hide();" />
			</h:panelGrid>
		</h:form>
	</p:dialog>
</h:body>
</html>